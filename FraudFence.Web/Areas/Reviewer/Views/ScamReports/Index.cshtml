@model List<FraudFence.Web.Areas.Reviewer.Models.ScamReportListViewModel>
@using FraudFence.EntityModels.Enums

@{
    ViewData["Title"] = "Scam Reports";
}

<h1 class="h3 mb-4 text-gray-800">Scam Reports</h1>

<style>
    table th, table td {
        vertical-align: middle;
    }

    .col-report-id {
        width: 70px;
        white-space: nowrap;
    }

    .col-title {
        width: 250px;
        word-break: break-word;
    }

    .col-submitted {
        width: 140px;
        word-break: break-word;
    }

    .col-reviewer {
        width: 120px;
        white-space: nowrap;
    }

    .col-status {
        width: 90px;
        white-space: nowrap;
    }

    .col-date {
        width: 110px;
        white-space: nowrap;
    }

    .col-agency {
        width: 160px;
        white-space: nowrap;
    }

    .col-actions {
        width: 90px;
        white-space: nowrap;
    }
</style>

@{
    var statuses = new[] { "", "Submitted", "Verified", "Rejected" };
    var statusLabels = new Dictionary<string, string> { { "", "All" }, { "Submitted", "Submitted" }, { "Verified", "Verified" }, { "Rejected", "Rejected" } };
    var selectedStatus = ViewBag.SelectedStatus as string ?? "";
    var options = new List<string>();
    foreach (var status in statuses)
    {
        var selected = status == selectedStatus ? " selected" : "";
        options.Add($"<option value=\"{status}\"{selected}>{statusLabels[status]}</option>");
    }
}
<div class="mb-3 d-flex justify-content-between align-items-center">
    <form method="get" class="form-inline">
        <label for="statusFilter" class="mr-2 font-weight-bold">Filter by Status:</label>
        <select class="form-control" id="statusFilter" name="status" onchange="this.form.submit()">
            @foreach (var option in options)
            {
                @Html.Raw(option)
            }
        </select>
    </form>
</div>

<table class="table table-striped table-bordered table-show-dt" id="scamReportsTable">
    <thead>
        <tr>
            <th class="col-report-id">ID</th>
            <th class="col-title">Title</th>
            <th class="col-submitted">Submitted By</th>
            <th class="col-reviewer">Reviewer</th>
            <th class="col-status">Status</th>
            <th class="col-date">Date</th>
            <th class="col-agency">Referred Agency</th>
            <th class="col-actions">Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var report in Model)
        {
            <tr>
                <td>#RPT-@report.Id.ToString("D3")</td>
                <td class="col-title">@report.Title</td>
                <td class="col-submitted">@report.SubmittedBy</td>
                <td class="col-reviewer">@Html.Raw(report.Reviewer.Replace(", ", "<br>").Replace(",", "<br>"))</td>
                <td class="col-status">
                    <span class="badge badge-@GetStatusClass(report.Status)">
                        @report.Status
                    </span>
                </td>
                <td class="col-date">@report.DateSubmitted.ToString("yyyy-MM-dd")</td>
                <td class="col-agency">@(string.IsNullOrEmpty(report.ExternalAgencyName) ? "Not referred" : report.ExternalAgencyName)</td>
                <td class="col-actions">
                    <div class="d-flex flex-wrap gap-2">
                        <a href="@Url.Action("Details", "ScamReports", new { id = report.Id })" class="btn btn-sm btn-outline-success">
                            <i class="fas fa-eye me-1"></i> View
                        </a>
                    </div>
                </td>
            </tr>
        }
    </tbody>
</table>

@functions {
    string GetStatusClass(ReportStatus status) => status switch
    {
        ReportStatus.Verified => "success",
        ReportStatus.Rejected => "danger",
        ReportStatus.Submitted => "warning",
        _ => "secondary"
    };
}

@section Scripts {
    <script>
        // No DataTable initialization here to avoid reinitialization error
        // Filtering logic can be added here if needed
    </script>
}


